plugins {
    id 'org.jetbrains.kotlin.jvm'
    id "org.jlleitschuh.gradle.ktlint"
    id "org.jetbrains.kotlinx.kover"
    id 'maven-publish'
}


repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.jetbrains.kotlin:kotlin-test'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'
}

test {
    useJUnitPlatform()
}


publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/ricardolopezb/printscript")
            version = "1.0.0-SNAPSHOT"
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}



tasks.register('installGitHook', Copy) {
    description = 'Install pre-commit git hook'
    from(new File(rootProject.rootDir, 'pre-commit'))
    into { new File(rootProject.rootDir, '.git/hooks') }
    fileMode 0777

    doLast {
        println 'Git pre-commit hook installed successfully.'
    }
}


tasks.named('build') {
    dependsOn 'check'
    dependsOn 'test'
    dependsOn 'koverVerify'
}

tasks.named('check') {
    dependsOn 'ktlintCheck'
}

koverReport {
    filters {
        excludes {
            // excludes class by fully-qualified JVM class name, wildcards '*' and '?' are available
            classes("org.commons")
        }
    }
    verify {
        rule {
            minBound(60)
            filters {
                excludes{
                    packages("ast")
                    packages("token")
                    packages("utils")
                }

            }
        }
    }
}
